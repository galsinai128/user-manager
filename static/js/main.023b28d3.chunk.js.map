{"version":3,"sources":["logo.svg","services/UserService.js","components/UserPreview/UserPreview.js","components/UserListItems/UserListItems.js","components/ControlPanel/ControlPanel.js","components/UserList/UserList.js","components/UserDetails/UserDetails.js","components/AddUser/AddUser.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NUM_OF_AVATARS","users","JSON","parse","localStorage","getItem","id","firstName","lastName","birthDate","profileImage","UserService","getUsers","getUserById","user","find","addUser","date","Date","getTime","Math","random","toString","substr","min","max","ceil","floor","imgGen","unshift","saveToStorage","deleteUser","index","findIndex","splice","formatted_date","t","a","year","getFullYear","month","getMonth","getDate","sortBy","key","sort","b","aVal","toLowerCase","bVal","setItem","stringify","library","add","faTrash","UserPreview","_this","this","react_default","createElement","className","src","props","alt","onClick","deleteClicked","react_fontawesome_index_es","icon","Component","UserListItems","dragulaDecorator","componentBackingInstance","Dragula","_this2","ref","map","displayDetails","components_UserPreview_UserPreview","faPlus","ControlPanel","state","value","name","onChange","sortClicked","disabled","selected","addClicked","UserList","components_ControlPanel_ControlPanel","components_UserListItems_UserListItems","UserDetails","faSave","faWindowClose","AddUser","newUser","handleOpenModal","setState","showModal","lib_default","isOpen","contentLabel","onSubmit","e","addUserClicked","placeholder","type","required","handleCloseModal","App","userToShow","target","preventDefault","formElements","elements","vals","concat","Object","toConsumableArray","updatedUsers","displayAdd","components_AddUser_AddUser","components_UserList_UserList","components_UserDetails_UserDetails","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.023b28d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const NUM_OF_AVATARS = 4\r\nvar defultUsers =\r\n    [\r\n        {\r\n            \"id\": \"01234\",\r\n            \"firstName\": \"Carina\",\r\n            \"lastName\": \"Smith\",\r\n            \"birthDate\": 457694903479,\r\n            \"profileImage\": \"./profile-image01.png\"\r\n        },\r\n        {\r\n            \"id\": \"12345\",\r\n            \"firstName\": \"Destiny\",\r\n            \"lastName\": \"Leal\",\r\n            \"birthDate\": 773224103479,\r\n            \"profileImage\": \"./profile-image02.png\"\r\n        },\r\n        {\r\n            \"id\": \"21345\",\r\n            \"firstName\": \"Agatha\",\r\n            \"lastName\": \"Sheppard\",\r\n            \"birthDate\": 675937703479,\r\n            \"profileImage\": \"./profile-image03.png\"\r\n        },\r\n        {\r\n            \"id\": \"12435\",\r\n            \"firstName\": \"Kester\",\r\n            \"lastName\": \"Cruz\",\r\n            \"birthDate\": 365506103479,\r\n            \"profileImage\": \"./profile-image04.png\"\r\n        },\r\n        {\r\n            \"id\": \"12356\",\r\n            \"firstName\": \"Roisin\",\r\n            \"lastName\": \"Hobbs\",\r\n            \"birthDate\": 1142501303479,\r\n            \"profileImage\": \"./profile-image01.png\"\r\n        }\r\n    ]\r\n\r\n\r\n\r\n\r\n//Load users from storage\r\nvar users = loadFromStorage() || defultUsers;\r\n\r\n//CRUD\r\nfunction getUsers() {\r\n    return users;\r\n}\r\n\r\nfunction getUserById(id) {\r\n    const user = users.find(user => user.id === id)\r\n    if (user) return user;\r\n}\r\n\r\nfunction addUser(user) {\r\n    var date = new Date(user.birthDate)\r\n    user.birthDate = date.getTime()\r\n    user.id = idGen()\r\n    user.profileImage = imgGen()\r\n    users.unshift(user);\r\n    saveToStorage(users)\r\n    return user;\r\n}\r\n\r\nfunction deleteUser(id) {\r\n    const index = users.findIndex(user => user.id === id)\r\n    if (index !== -1) {\r\n        users.splice(index, 1)\r\n        saveToStorage(users)\r\n    }\r\n}\r\n\r\nfunction sortBy(key){\r\n    return users.sort(function(a, b){\r\n        var aVal = a[key].toLowerCase()\r\n        var bVal = b[key].toLowerCase()\r\n        if(aVal < bVal) return -1;\r\n        if(aVal > bVal) return 1;\r\n        return 0;\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction formatted_date(t)\r\n{\r\n    var a = new Date(t);\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var time = date + ' ' + month + ' ' + year;\r\n    return time;\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    getUsers,\r\n    getUserById,\r\n    addUser,\r\n    deleteUser,\r\n    formatted_date,\r\n    sortBy\r\n}\r\n\r\n\r\nfunction saveToStorage(users) {\r\n    localStorage.setItem(\"users\", JSON.stringify(users));\r\n}\r\n\r\nfunction loadFromStorage() {\r\n    return JSON.parse(localStorage.getItem(\"users\"));\r\n}\r\n\r\nfunction idGen() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction imgGen() {\r\n    switch (getRandomInt(1, NUM_OF_AVATARS + 1)) {\r\n        case 1:\r\n            return './profile-image01.png'\r\n        case 2:\r\n            return './profile-image02.png'\r\n        case 3:\r\n            return './profile-image03.png'\r\n        case 4:\r\n            return './profile-image04.png'\r\n    }\r\n}\r\n\r\n","import React,  { Component }  from 'react';\r\nimport './UserPreview.css';\r\nimport UserService from '../../services/UserService'\r\n\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faTrash)\r\n\r\n  class UserPreview extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"user-preview flex space-between align-center\">\r\n                <div className=\"user-preview-container flex\">\r\n                    <img src={this.props.user.profileImage} alt=\"\" className=\"preview-avatar\"/>\r\n                    <div className=\"details-container flex flex-col justify-center align-center\">\r\n                        <div className=\"name-container\">\r\n                            {this.props.user.firstName} {this.props.user.lastName}\r\n                        </div>\r\n                        <div className=\"date-container\">\r\n                            {UserService.formatted_date(this.props.user.birthDate)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"delete-btn\" onClick={()=> this.props.deleteClicked(this.props.user.id)}>\r\n                    <FontAwesomeIcon icon=\"trash\" />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    \r\n   \r\n}  \r\n\r\n   \r\n  export default UserPreview;\r\n","import React,  { Component }  from 'react';\r\nimport './UserListItems.css'\r\nimport UserPreview from '../UserPreview/UserPreview'\r\nimport { faDivide } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport Dragula from 'react-dragula';\r\n\r\n\r\n\r\nclass UserListItems extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <ul ref={this.dragulaDecorator}>\r\n                {this.props.users.map(user => ( \r\n                    <li \r\n                        key={user.id} \r\n                        onClick={()=> this.props.displayDetails(user.id)}\r\n\r\n                    >\r\n                        <UserPreview \r\n                            user = {user}\r\n                            deleteClicked = {this.props.deleteClicked}\r\n                        ></UserPreview>\r\n                    </li>\r\n                ))}    \r\n            </ul>\r\n\r\n        );\r\n    }\r\n    dragulaDecorator = (componentBackingInstance) => {\r\n        if (componentBackingInstance) {\r\n          let options = { };\r\n          Dragula([componentBackingInstance], options);\r\n        }\r\n      };\r\n\r\n\r\n   \r\n}\r\n\r\nexport default UserListItems;\r\n\r\n\r\n","import React,  { Component }  from 'react';\r\nimport './ControlPanel.css'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nlibrary.add(faPlus)\r\n\r\n\r\n\r\n\r\nclass ControlPanel extends Component {\r\n    state = {\r\n        value: 'sortBy'\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"control-panel flex space-around\">\r\n                <select name=\"sortBy\" id=\"sortBy\" value={this.state.value} onChange={this.props.sortClicked} >\r\n                    <option value='sortBy' disabled selected>Sort By</option>\r\n                    <option value=\"firstName\">First Name</option>\r\n                    <option value=\"lastName\">Last Name</option>\r\n                </select>\r\n                <button className=\"add-user-btn\" onClick={this.props.addClicked}>\r\n                    <FontAwesomeIcon icon=\"plus\" />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n   \r\n}\r\n\r\nexport default ControlPanel;","import React,  { Component }  from 'react';\r\nimport './UserList.css'\r\nimport UserListItems from '../UserListItems/UserListItems'\r\nimport ControlPanel from '../ControlPanel/ControlPanel'\r\n\r\n\r\n\r\n\r\nclass UserList extends Component {\r\n\r\n    render() {\r\n        return (\r\n          <section className=\"user-list\">\r\n            <h1 className=\"section-title\">Users List</h1>\r\n            <ControlPanel\r\n                sortClicked = {this.props.sortClicked}\r\n                addClicked = {this.props.addClicked}\r\n            ></ControlPanel>\r\n            <UserListItems\r\n                users = {this.props.users}\r\n                displayDetails = {this.props.displayDetails}\r\n                deleteClicked = {this.props.deleteClicked}\r\n            >\r\n\r\n            </UserListItems>\r\n\r\n          </section>\r\n        );\r\n    }\r\n\r\n\r\n   \r\n}\r\n\r\nexport default UserList;\r\n\r\n\r\n","import React,  { Component }  from 'react';\r\nimport './UserDetails.css';\r\nimport UserService from '../../services/UserService'\r\n\r\n  class UserDetails extends Component {\r\n    render() {\r\n        if (this.props.user){\r\n            return (\r\n              <section className=\"user-details\">\r\n                <h1 className=\"section-title\">Full Details</h1>\r\n                <div className=\"flex\">\r\n                  <img src={this.props.user.profileImage} alt=\"\" className=\"detail-avatar\"/>\r\n                  <div className=\"details-container\">\r\n                      <div className=\"detail-container\">\r\n                        <div className=\"detail\">{this.props.user.id}</div>\r\n                        <div className=\"description\">ID</div>\r\n                      </div>\r\n                      <div className=\"detail-container\">\r\n                        <div className=\"detail\">{this.props.user.firstName}</div>\r\n                        <div className=\"description\">First Name</div>\r\n                      </div>\r\n                      <div className=\"detail-container\">\r\n                        <div className=\"detail\">{this.props.user.lastName}</div>\r\n                        <div className=\"description\">Last Name</div>\r\n                      </div>\r\n                      <div className=\"detail-container\">\r\n                        <div className=\"detail\">{UserService.formatted_date(this.props.user.birthDate)}</div>\r\n                        <div className=\"description\">Birth Date</div>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n              <section className=\"user-list\">\r\n                <h1 className=\"section-title\">Full Details</h1>\r\n                Please pick a user\r\n              </section>\r\n            );\r\n        }\r\n    }\r\n\r\n  \r\n   \r\n   \r\n}  \r\n\r\n  export default UserDetails;","import React,  { Component }  from 'react';\r\nimport './AddUser.css'\r\nimport UserService from '../../services/UserService'\r\n\r\nimport Modal from 'react-modal';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave,faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faSave)\r\nlibrary.add(faWindowClose)\r\n\r\n\r\nclass AddUser extends Component {\r\n    state = {\r\n      newUser : {\r\n        firstName : '',\r\n        lastName : '',\r\n        birthDate : null,\r\n      },\r\n    };\r\n\r\n    handleOpenModal = () => {\r\n      this.setState({ showModal: true });\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n          <section className=\"add-user\">\r\n\r\n            <Modal \r\n              isOpen={this.props.showModal}\r\n              contentLabel=\"Minimal Modal Example\"\r\n              >\r\n              <div className=\"modal-data flex flex-col align-center\">\r\n                <h1>New User</h1>\r\n                <form onSubmit={(e)=>this.props.addUserClicked(e)} className=\"edit-form flex flex-col align-center\">\r\n                  <input name=\"firstName\" placeholder=\"First Name\" className=\"edit-input\" type=\"text\" required/>\r\n                  <input name=\"lastName\" placeholder=\"Last Name\" className=\"edit-input\" type=\"text\" required/>\r\n                  <input name=\"birthDate\" placeholder=\"Date Of Birth\" className=\"edit-input\" type=\"date\" required/>\r\n                  <div className=\"add-btns-container\">\r\n                    <button className=\"add-btn\" type=\"submit\">\r\n                      <FontAwesomeIcon icon=\"save\" />\r\n                    </button>\r\n                    <button className=\"add-btn\" onClick={this.props.handleCloseModal}>\r\n                      <FontAwesomeIcon icon=\"window-close\" />\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Modal>\r\n          </section>\r\n        );\r\n    }\r\n\r\n\r\n\r\n   \r\n}\r\n\r\nexport default AddUser;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport UserList from './components/UserList/UserList'\nimport UserDetails from './components/UserDetails/UserDetails'\nimport AddUser from './components/AddUser/AddUser'\nimport UserService from './services/UserService'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nclass App extends Component {\n  state = {\n      users : [],\n      userToShow : null, //for details component\n      showModal : false //for adding user\n  };\n  componentDidMount(){\n      var users = [...UserService.getUsers()]\n      this.setState({users: users})\n  }\n  \n  displayDetails = (id) => {\n    this.setState({userToShow : UserService.getUserById(id)})\n  }\n\n  sortClicked = (e) =>{\n    var key = e.target.value\n    this.setState({users : UserService.sortBy(key)})\n  }\n\n  addUserClicked = (e) =>{\n    e.preventDefault();\n    const formElements = e.target.elements;\n    const vals = {\n      firstName: formElements.firstName.value,\n      lastName: formElements.lastName.value,\n      birthDate: formElements.birthDate.value\n    }\n    this.setState({users : [UserService.addUser(vals),...this.state.users]})\n    this.handleCloseModal();\n  }\n    \n  deleteClicked = (id) =>{\n    UserService.deleteUser(id)\n    const index = this.state.users.findIndex(user => user.id === id)\n    if (index !== -1) {\n      var updatedUsers  = [...this.state.users]\n      updatedUsers.splice(index,1)\n    }\n    this.setState({users : updatedUsers})\n  }\n\n  \n  displayAdd= () =>{\n    this.setState({showModal : true});\n  }\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AddUser\n          addUserClicked = {this.addUserClicked}\n          showModal = {this.state.showModal}\n          handleCloseModal = {this.handleCloseModal}\n        ></AddUser>\n        <div className=\"app-container flex\">\n          <div className=\"list-container\">\n            <UserList \n              users = {this.state.users} \n              displayDetails = {this.displayDetails}\n              sortClicked = {this.sortClicked}\n              addUserClicked = {this.addUserClicked}\n              deleteClicked = {this.deleteClicked}\n              addClicked = {this.displayAdd}\n              >\n            </UserList>\n          </div>\n          <div className=\"user-container\">\n            <UserDetails user = {this.state.userToShow}></UserDetails>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}